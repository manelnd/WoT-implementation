import { MqttBrokerServerConfig } from "./mqtt";
import { ProtocolServer, Servient, ExposedThing } from "@node-wot/core";
export default class MqttBrokerServer implements ProtocolServer {
    private static brokerIsInitialized;
    readonly scheme: string;
    private readonly ACTION_SEGMENT_LENGTH;
    private readonly PROPERTY_SEGMENT_LENGTH;
    private readonly THING_NAME_SEGMENT_INDEX;
    private readonly INTERACTION_TYPE_SEGMENT_INDEX;
    private readonly INTERACTION_NAME_SEGMENT_INDEX;
    private readonly INTERACTION_EXT_SEGMENT_INDEX;
    private readonly defaults;
    private port;
    private address?;
    private brokerURI;
    private readonly things;
    private readonly config;
    private broker?;
    private hostedServer?;
    private hostedBroker?;
    constructor(config: MqttBrokerServerConfig);
    expose(thing: ExposedThing): Promise<void>;
    private exposeProperty;
    private exposeAction;
    private exposeEvent;
    private handleMessage;
    private handleAction;
    private handlePropertyWrite;
    destroy(thingId: string): Promise<boolean>;
    start(servient: Servient): Promise<void>;
    stop(): Promise<void>;
    getPort(): number;
    getAddress(): string | undefined;
    private selfHostAuthentication;
}
