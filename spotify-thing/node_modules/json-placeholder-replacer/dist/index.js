#!/usr/bin/env node
"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.JsonPlaceholderReplacer = void 0;
var json_placeholder_replacer_1 = require("./json-placeholder-replacer");
Object.defineProperty(exports, "JsonPlaceholderReplacer", { enumerable: true, get: function () { return json_placeholder_replacer_1.JsonPlaceholderReplacer; } });
const json_placeholder_replacer_2 = require("./json-placeholder-replacer");
const fs = __importStar(require("fs"));
if (require.main === module) {
    process.exitCode = process.argv.length;
    const replacer = new json_placeholder_replacer_2.JsonPlaceholderReplacer();
    process.argv
        .filter((value, index) => index > 2)
        .map((value) => replacer.addVariableMap(JSON.parse(fs.readFileSync(value).toString())));
    const replaceableFileContent = fs.readFileSync(process.argv[2]).toString();
    const replacedValue = replacer.replace(JSON.parse(replaceableFileContent));
    console.log(JSON.stringify(replacedValue, null, 4));
    process.exitCode = 0;
}
